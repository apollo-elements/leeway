enum Status {
  PARTED
  ONLINE
  OFFLINE
  AWAY
}

type Message {
  message: String
  user: User
  date: String
}

type User {
  id: ID
  nick: String!
  lastSeen: String
  status: Status
  isMe: Boolean
}

type Query {
  messages: [Message]
  users: [User]
  me: User
}

type Subscription {
  messageSent: Message
  messageEdited: Message
  userStatusUpdated: User
  userLastSeenUpdated: User
  userJoined: User
  userParted: User
}

type Mutation {
  sendMessage(userId: ID!, message: String!): Message
  changeNickname(id: ID!, nick: String!): User
  updateUserStatus(id: ID!, status: Status!): Status
  updateUserLastSeen(userId: ID!): User
  editMessage(date: String, message: String): Message
  join(nick: String!, password: String): User
  # Such sweet sorrow. Returns null.
  part: String
}
